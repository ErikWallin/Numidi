"use strict";angular.module("NumidiApp",["ui","ui.bootstrap","LocalStorageModule"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/home.html"}).when("/board",{controller:"BoardController",templateUrl:"views/board.html"}).when("/settings",{controller:"SettingsController",templateUrl:"views/settings.html"}).when("/rules",{templateUrl:"views/rules.html"}).when("/about",{templateUrl:"views/about.html"}).otherwise({redirectTo:"/board"})}]),angular.module("NumidiApp").controller("NavbarController",["$scope","$location",function(a,b){a.routeIs=function(a){return b.path()===a}}]),angular.module("NumidiApp").controller("BoardController",["$scope","settingsService","boardService",function(a,b,c){function d(a,b,c){this.number=a,this.coordinate=[],this.coordinate.row=b,this.coordinate.col=c,this.picked=!1,this.solved=!1}a.settings=b,a.board=c,a.newGame=function(){a.board.resetGame(),a.board.started=!0,a.board.grid[0]=[];for(var b=-1,c=0;c<a.settings.width;c++){do var e=Math.floor(10*Math.random());while(b==e||10==b+e);a.board.grid[0][c]=new d(e,0,c),b=e}a.board.grid[1]=[];for(var c=0;c<a.settings.width;c++)a.board.grid[1][c]=new d(c%10,1,c);a.board.lastCoordinate=[],a.board.lastCoordinate.row=1,a.board.lastCoordinate.col=a.settings.width-1},a.pickTile=function(b){function c(b,c){function d(b,c){var f=e(b,!0);return f.row==c.row&&f.col==c.col?!0:0==a.board.grid[f.row][f.col].solved?!1:d(f,c)}function f(b,c){if(b.col!=c.col)return!1;for(var d=Math.min(b.row,c.row)+1;d<Math.max(b.row,c.row);d++)if(!a.board.grid[d][b.col].solved)return!1;return!0}function g(b,c){if(Math.abs(b.row-c.row)!=Math.abs(b.col-c.col)||b.row==c.row)return!1;var d={row:b.row>c.row?b.row-1:b.row+1,col:b.col>c.col?b.col-1:b.col+1};return d.row==c.row&&d.col==c.col?!0:a.board.grid[d.row][d.col].solved?g(d,c):!1}return d(b.coordinate,c.coordinate)||d(c.coordinate,b.coordinate)||f(b.coordinate,c.coordinate)||g(b.coordinate,c.coordinate)}function d(){for(var b=0;b<=a.board.lastCoordinate.row;b++)for(var c=0;c<=(b==a.board.lastCoordinate.row?a.board.lastCoordinate.col:a.settings.width-1);c++)if(!a.board.grid[b][c].solved)return!1;return!0}return b.solved?(a.board.firstPick&&(a.board.firstPick.picked=!1,a.board.firstPick=void 0),void 0):(a.board.firstPick?a.board.firstPick===b?(b.picked=!1,a.board.firstPick=void 0):a.board.firstPick.number!=b.number&&10!=a.board.firstPick.number+b.number||!c(a.board.firstPick,b)?(a.board.firstPick.picked=!1,b.picked=!0,a.board.firstPick=b):(a.board.firstPick.picked=!1,a.board.firstPick.solved=!0,b.picked=!1,b.solved=!0,a.board.firstPick=void 0,d()&&(a.board.win=!0)):(b.picked=!0,a.board.firstPick=b),void 0)};var e=function(b,c){var d={row:b.row,col:b.col};return d.col+=1,d.col==a.settings.width&&(d.col=0,d.row+=1),c&&(d.row>a.board.lastCoordinate.row||d.row==a.board.lastCoordinate.row&&d.col>a.board.lastCoordinate.col)&&(d.row=0),d};a.deal=function(){for(var b={row:a.board.lastCoordinate.row,col:a.board.lastCoordinate.col},c=0;c<=b.row;c++)for(var f=0;f<=(c==b.row?b.col:a.settings.width-1);f++)a.board.grid[c][f].solved||(a.board.lastCoordinate=e(a.board.lastCoordinate,!1),0==a.board.lastCoordinate.col&&(a.board.grid[a.board.lastCoordinate.row]=[]),a.board.grid[a.board.lastCoordinate.row][a.board.lastCoordinate.col]=new d(a.board.grid[c][f].number,a.board.lastCoordinate.row,a.board.lastCoordinate.col))}}]),angular.module("NumidiApp").factory("boardService",function(){var a,b,c,d,e,f=function(){this.started=!1,this.win=!1,this.grid=[],this.lastCoordinate=[],this.firstPick=void 0};return{started:a,win:b,grid:c,lastCoordinate:d,firstPick:e,resetGame:f}}),angular.module("NumidiApp").controller("SettingsController",["$scope","settingsService","boardService",function(a,b,c){a.settings=b,a.board=c}]),angular.module("NumidiApp").factory("settingsService",function(){return{width:20,widths:[10,15,20,25,30]}});